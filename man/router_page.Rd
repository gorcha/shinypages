% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/router.R
\name{router_page}
\alias{router_page}
\title{Create a router page}
\usage{
router_page(
  path,
  ui_module,
  server_module = NULL,
  title = "",
  authorised = NULL,
  metadata = list()
)
}
\arguments{
\item{path}{Path for this page.}

\item{ui_module}{Shiny UI module to render.}

\item{server_module}{Shiny server module to render.}

\item{title}{Page title.}

\item{authorised}{A function that determines whether the current session is
authorised to view this page. The function should take a session object as
input, and return \code{TRUE} if the session is authorised to view this page and
\code{FALSE} otherwise.}

\item{metadata}{An arbitrary list of page metadata. This can be accessed as a
reactive via \code{get_router_page()} or used in router callbacks.}
}
\value{
A \code{router_page} object.
}
\description{
Create a router page
}
\examples{
if (interactive()) {

ui_test <- function(id) {
  htmltools::p("Test!")
}

server_test <- function(id) {
  moduleServer(id, function(input, output, session) { })
}

home_page <- router_page("home", ui_test)
server_page <- router_page("server", ui_test, server_test)

is_admin <- function(session) {
  "admin" \%in\% session$groups
}

admin_page <- router_page("admin", ui_test, authorised = is_admin)
}
}
